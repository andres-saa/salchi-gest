import{G as r,j as a,U as c}from"./index-ec7a525d.js";function n(o){return new Intl.NumberFormat("es-CO",{style:"currency",currency:"COP",minimumFractionDigits:0,maximumFractionDigits:0}).format(o)}const d=1e6,l=n(d);console.log(l);const h=r("shoping-cart",{persist:{key:"shoping-cart",storage:localStorage,paths:["cart","last_order"]},state:()=>({currentProduct:{},visibles:{currentProduct:!1,addAdditionToCart:!1,last_order:""},cart:{products:[],total_cost:0,additions:[]},last_order:"",sending_order:!1}),getters:{totalItems:o=>o.cart.products.reduce((t,e)=>t+e.quantity,0),totalAdditions:o=>o.cart.additions.reduce((t,e)=>t+e.price*e.quantity,0),isProductInCart:o=>t=>o.cart.products.some(e=>e.product.id===t)},actions:{incrementAdditionQuantity(o){const t=this.cart.additions.find(e=>e.id===o);t&&(t.quantity+=1,this.calculateCartTotal())},removeAdditionCompletelyFromCart(o){const t=this.cart.additions.findIndex(e=>e.id===o);t>-1&&(this.cart.additions.splice(t,1),this.calculateCartTotal())},decrementAdditionQuantity(o){const t=this.cart.additions.find(e=>e.id===o);t&&t.quantity>1&&(t.quantity-=1,this.calculateCartTotal())},setCurrentProduct(o){this.currentProduct=o},setVisible(o,t){this.visibles[o]=t},addProductToCart(o,t=1,e=[]){const i=this.cart.products.find(s=>s.product.id===o.id);i?(i.quantity+=t,i.total_cost+=o.price*t):this.cart.products.push({product:o,quantity:t,additionalItems:this.groupAdditionalItems(e),total_cost:this.calculateProductTotal(o,t,e)}),this.calculateCartTotal()},removeProductFromCart(o){this.cart.products=this.cart.products.filter(t=>t.product.id!==o),this.calculateCartTotal()},addAdditionalItem(o,t){const e=this.cart.products.find(i=>i.product.id===o);e&&(e.additionalItems.push(t),e.total_cost+=t.price*t.quantity,this.calculateCartTotal())},removeAdditionalItem(o,t){const e=this.cart.products.find(i=>i.product.id===o);if(e){const i=e.additionalItems.findIndex(s=>s.id===t);i>-1&&(e.total_cost-=e.additionalItems[i].price*e.additionalItems[i].quantity,e.additionalItems.splice(i,1),this.calculateCartTotal())}},groupAdditionalItems(o){return o.reduce((t,e)=>((t[e.type]=t[e.type]||[]).push(e),t),{})},calculateProductTotal(o,t,e){let i=o.price*t;return e.forEach(s=>{i+=s.price*s.quantity}),i},removeProductInstance(o){const t=this.cart.products.find(e=>e.product.id===o);t&&t.quantity>1?(t.quantity-=1,t.total_cost-=t.product.price,this.calculateCartTotal()):t&&t.quantity===1&&this.removeProductFromCart(o)},calculateCartTotal(){const o=this.cart.products.reduce((e,i)=>e+i.total_cost,0),t=this.totalAdditions;this.cart.total_cost=o+t},addAdditionToCart(o){const t=this.cart.additions.find(e=>e.id===o.id);t?t.quantity+=o.quantity:this.cart.additions.push({...o}),this.calculateCartTotal()},removeAdditionFromCart(o){const t=this.cart.additions.findIndex(e=>e.id===o);t>-1&&(this.cart.additions[t].quantity>1?this.cart.additions[t].quantity-=1:this.cart.additions.splice(t,1),this.calculateCartTotal())}}}),p=r("call-center-site",{persist:{key:"call-center-site",storage:localStorage,paths:["location"]},state:()=>({location:{site:{},neigborhood:{}},visibles:{currentSite:!1},current_delivery:0,webSocket:null,status:"closed"}),getters:{fucion:o=>0},actions:{async func(){return func},setLocation(o){this.connectWebSocket(o.site.site_id),this.location=o},setVisible(o,t){this.visibles[o]=t},async connectWebSocket(o){this.webSocket!==null&&this.webSocket.close,this.webSocket=new WebSocket(`wss://${URI_SOCKET}/ws/${o}`),this.webSocket.onopen=()=>this.webSocket.onmessage=t=>{console.log("new mesagge")},this.webSocket.onclose=async()=>{console.log("WebSocket disconnected");const t=this.location.site.site_id;t&&this.connectWebSocket(t),this.webSocket=null},this.webSocket.onerror=t=>console.error("WebSocket error:",t)},async setNeighborhoodPrice(){try{const o=await a.get(`${c}/neighborhood/${this.location.neigborhood.neighborhood_id}/`);return o.status===200?(this.location.neigborhood=o.data,o.data):(console.error("An error occurred while fetching the ingredients:",o.status),null)}catch(o){return console.error("An error occurred while fetching the ingredients:",o),null}},async setNeighborhoodPriceCero(){this.location.neigborhood.delivery_price=0}}});export{h as a,n as f,p as u};
