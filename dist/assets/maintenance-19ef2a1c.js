import{x as r,U as o}from"./index-f52b545e.js";const e=r(),d={async getSitesWithAllEquipment(a){e.setLoading(!0,"cargando sitios con todos los equipos");try{const t=await(await fetch(`${o}/equipment/sites-with-all`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)})).json();return e.setLoading(!1,"cargando sitios con todos los equipos"),t}catch{return e.setLoading(!1,"cargando sitios con todos los equipos"),[]}},async uploadImage(a,n){const t=new FormData;t.append("file",n);try{if(!(await fetch(`${o}/upload-product-image/${a}`,{method:"POST",body:t})).ok)throw new Error("Error al subir la imagen")}catch(s){console.error("Error al subir la imagen:",s)}},async getAllEquipment(){e.setLoading(!0,"cargando equipos");try{const n=await(await fetch(`${o}/equipment`)).json();return e.setLoading(!1,"cargando equipos"),n}catch(a){e.setLoading(!1,"cargando equipos"),console.log(a)}},async getEquipmentById(a){e.setLoading(!0,"cargando equipo");try{const t=await(await fetch(`${o}/equipment/${a}`)).json();return e.setLoading(!1,"cargando equipo"),t}catch(n){e.setLoading(!1,"cargando equipo"),console.log(n)}},async createEquipment(a){e.setLoading(!0,"creando equipo");try{const t=await(await fetch(`${o}/equipment`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)})).json();return e.setLoading(!1,"creando equipo"),t}catch(n){e.setLoading(!1,"creando equipo"),console.log(n)}},async updateEquipment(a,n){e.setLoading(!0,"actualizando equipo");try{const s=await(await fetch(`${o}/equipment/${a}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)})).json();return e.setLoading(!1,"actualizando equipo"),s}catch(t){e.setLoading(!1,"actualizando equipo"),console.log(t)}},async getEquipmentBySite(a){e.setLoading(!0,"cargando equipos");try{const t=await(await fetch(`${o}/equipment/site/${a}`)).json();return e.setLoading(!1,"cargando equipos por sitio"),t}catch(n){e.setLoading(!1,"cargando equipos por sitio"),console.log(n)}},async deleteEquipment(a){e.setLoading(!0,"eliminando equipo");try{const n=await fetch(`${o}/equipment/${a}`,{method:"DELETE"});return e.setLoading(!1,"eliminando equipo"),n.ok}catch(n){e.setLoading(!1,"eliminando equipo"),console.log(n)}}},l={async completeMaintenance(a,n){e.setLoading(!0,"completando mantenimiento");try{const t=new URL(`${o}/maintenance/${a}/complete`);t.searchParams.append("remarks",n);const s=await fetch(t,{method:"PUT",headers:{"Content-Type":"application/json"}});if(!s.ok)throw new Error("Error al completar el mantenimiento");const i=await s.json();return e.setLoading(!1,"completando mantenimiento"),i}catch(t){e.setLoading(!1,"completando mantenimiento"),console.error("Error al completar el mantenimiento:",t)}},async getMaintenanceBySite(a){e.setLoading(!0,"cargando mantenimientos por sede");try{const t=await(await fetch(`${o}/maintenance/site/${a}`)).json();return e.setLoading(!1,"cargando mantenimientos por sede"),t}catch(n){e.setLoading(!1,"cargando mantenimientos por sede"),console.log(n)}},async getAllMaintenanceRecords(){e.setLoading(!0,"cargando mantenimientos");try{const n=await(await fetch(`${o}/maintenance`)).json();return e.setLoading(!1,"cargando mantenimientos"),n}catch(a){e.setLoading(!1,"cargando mantenimientos"),console.log(a)}},async getMaintenanceById(a){e.setLoading(!0,"cargando mantenimiento");try{const t=await(await fetch(`${o}/maintenance/${a}`)).json();return e.setLoading(!1,"cargando mantenimiento"),t}catch(n){e.setLoading(!1,"cargando mantenimiento"),console.log(n)}},async createMaintenanceRecord(a){e.setLoading(!0,"creando mantenimiento");try{const t=await(await fetch(`${o}/maintenance`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)})).json();return e.setLoading(!1,"creando mantenimiento"),t}catch(n){e.setLoading(!1,"creando mantenimiento"),console.log(n)}},async updateMaintenanceRecord(a,n){e.setLoading(!0,"actualizando mantenimiento");try{const s=await(await fetch(`${o}/maintenance/${a}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)})).json();return e.setLoading(!1,"actualizando mantenimiento"),s}catch(t){e.setLoading(!1,"actualizando mantenimiento"),console.log(t)}},async deleteMaintenanceRecord(a){e.setLoading(!0,"eliminando mantenimiento");try{const n=await fetch(`${o}/maintenance/${a}`,{method:"DELETE"});return e.setLoading(!1,"eliminando mantenimiento"),n.ok}catch(n){e.setLoading(!1,"eliminando mantenimiento"),console.log(n)}}};export{d as e,l as m};
